开发环境：VS2012;
编程语言：C ++；
函数的接口要求：
函数形式带有一个double型参数，并有double型返回值，例如：double sin（double x）;
下附tanx函数和cotx函数的C ++具体实现代码：
double Trigonmetric_Func::tan(double x)
{
	double sum=0;//泰勒展开式之和
		double m=0.00000;//泰勒展开式分母
	for(int n=1;n<=N;n++)//5次循环，求5项泰勒展开式之和
	{
		double X;//泰勒展开式每项的分子
		if(n==1)
		{
			m=1;
		}
		if(n==2)
		{
			m=(double)1/3;		
		}
		if(n==3)
		{
			m=(double)2/15;		
		}
		if(n==4)
		{
			m=(double)17/315;		
		}
		if(n==5)
		{
			m=(double)62/2835;			
		}	
		X=power(x,2*n-1);//泰勒展开式每项的分子（X的(2*n)次方）	
		sum+=(X*m);//泰勒展开式之和即所求余弦函数的近似值
		
			
	}
	return sum;
	
}


double Trigonmetric_Func::cot(double x)
{
	double sum=0;//泰勒展开式之和
		double m=0.00000;//泰勒展开式分母
	for(int n=0;n<N;n++)//5次循环，求5项泰勒展开式之和
	{
		double X;//泰勒展开式每项的分子
		if(n==0)
		{
			m=1;			
		}
		if(n==1)
		{
			m=(double)-1/3;
			cout<<"m="<<m<<endl;
		}
		if(n==2)
		{
			m=(double)-1/45;
			cout<<"m="<<m<<endl;
		}
		if(n==3)
		{
			m=(double)-2/945;
			cout<<"m="<<m<<endl;
		}
		if(n==4)
		{
			m=(double)-1/4725;
			cout<<"m="<<m<<endl;
		}
		
		X=power(x,2*n-1);//泰勒展开式每项的分子（X的(2*n)次方）
		
		sum+=(X*m);//泰勒展开式之和即所求余弦函数的近似值
				
		
	}
	return sum;
	
}
